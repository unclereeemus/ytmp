(defpoll volume_level :interval "1s" "amixer -c 0 sget Master | sed '5\!d' | cut -d' ' -f6 | grep -o '[1-9]*'")
(defpoll mic_level :interval "1s" "mpv_socket_commands g volume st /tmp/mpvsocketytmp | jq -r .data")
(defpoll start_level :interval "1s" "ytmpsuite pvc")
(defpoll BAT :interval "1s" "ytmpsuite pvc")

; (defpoll daemon_stat :interval "1s" "if pgrep -f 'ytmp -d' >/dev/null 2>&1; then echo 1; else echo 0; fi")
(defpoll daemon_stat :interval "1s" "./src/scripts/vars -gd")
(defpoll random_stat :interval "1s" "./src/scripts/vars -gr")
(defpoll album :interval "1s" "./src/scripts/vars -prev")
(defpoll title :interval "1s" "./src/scripts/vars -title")
(defpoll artist :interval "1s" "./src/scripts/vars -next")
(defpoll duration :interval "1s" "ytmp -dur")
(defpoll pause_stat :interval "1s" "./src/scripts/vars -gp")
(defpoll repeat_stat :interval "1s" "mpv_socket_commands g loop st /tmp/mpvsocketytmp | jq -r .data")
; (defpoll prev_song :interval "1s" "grep ")
(defpoll yst1_stat :interval "1s" "ytmpsuite gt1 | head -1")
(defpoll yst2_stat :interval "1s" "ytmpsuite gt2 | head -1")

(defvar song_cover '/tmp/muscover.webp')

(defpoll mpd_progress :interval "1s" "mpv_socket_commands g percent-pos | jq -r .data")
(defpoll mpd_current :interval "1s" "./src/scripts/vars -gl")
(defpoll mpd_duration :interval "24h" "mpc --format=%time% current")

(deflisten mpd_sub "./src/shell/mpdaemon.py")
(defpoll mpd_level :interval "24h" `mpc volume 2>/dev/stdout | awk -F: '{gsub("%| ", "", $2); print $2}'`)
(deflisten pctl_sub "./src/shell/playerctl.py")

; (defpoll hostname :interval "1000s" "hostnamectl hostname")
; (defpoll username :interval "1000s" "echo $USER")
;
; (defpoll weather :interval "500s" "./src/shell/weather.py fetch")
; (defpoll weather_gist :interval "20h" :run-while false "./src/shell/weather.py gist description")
;
; (defpoll net :interval "100s" `nmcli -terse -fields SIGNAL,ACTIVE device wifi | awk --field-separator ':' '{if($2=="yes")print$1}'`)
; (defpoll ssid :interval "100s" `nmcli -terse -fields SSID,ACTIVE device wifi | awk --field-separator ':' '{if($2=="yes")print$1}'`)
;
; (defvar vertigo_volume_toggle "pamixer --toggle-mute")
; (defvar profile "./assets/profile.png")
;
; (defpoll dunst :interval "1s" "[ $(dunstctl is-paused) = false ] && echo  || echo ")
; (defpoll redshift :interval "1s" "pidof redshift &>/dev/null && echo  || echo ")
;
; (defpoll volume_status :interval "1s" "[ $(pamixer --get-volume-human) = muted ] && echo 了 || echo 醴")
; (defpoll volume_level :interval "1s" "pulsemixer --get-volume | cut -d' ' -f1")
;
; (defpoll mic_level :interval "1s" `mpv_socket_commands g volume | jq .data`)
; (defpoll mic_status :interval "1s" `[ $(pamixer --source 1 --get-volume-human) = muted ] && echo  || echo `)
;
(defpoll time :interval "1s" `date +'{"hour":"%H","min":"%M","sec":"%S","pretty":"%a, %e %b","day":"%A","month":"%B","dom":"%e","year":"%Y","day_num":"%d","month_num":"%m","year_num":"%y"}'`)
(defpoll uptime :interval "48h" "uptime --pretty | ./src/scripts/uptime.awk")

; vim:filetype=yuck
